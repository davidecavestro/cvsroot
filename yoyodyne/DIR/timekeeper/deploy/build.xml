<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="timekeeper">
    <!-- Written to assume that classpath is rooted in the current directory. -->
    <!-- So this should be OK if you make this script in the root of a filesystem. -->
    <!-- If not, just change src.dir to be the root of your sources' package tree -->
    <!-- and use e.g. View over a Filesystem to mount that subdirectory with all capabilities. -->
    <!-- The idea is that both Ant and NetBeans have to know what the package root is -->
    <!-- for the classes in your application. -->

    <!-- Don't worry if you don't know the Ant syntax completely or need help on some tasks! -->
    <!-- The standard Ant documentation can be downloaded from AutoUpdate and -->
    <!-- and then you can access the Ant manual in the online help. -->

    <target name="init">
        <property location="classes" name="classes.dir"/>
        <property location="../src" name="src.dir"/>
        <property location="doc/api" name="javadoc.dir"/>
        <property location="tmp" name="tmp.dir"/>
        <property name="project.name" value="${ant.project.name}"/>
        <property location="${project.name}.jar" name="jar"/>
    </target>

    <target depends="init" name="compile">
        <!-- Both srcdir and destdir should be package roots. -->
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${tmp.dir}"/>

       <javac debug="true" deprecation="true" destdir="${classes.dir}" >
	    <src>
                <pathelement location="${src.dir}/com/ost/timekeeper/model"/>
                <pathelement location="${src.dir}/com/ost/timekeeper/util"/>
	    </src>
            <!-- To add something to the classpath: -->
            <!-- <classpath><pathelement location="${mylib}"/></classpath> -->
		<!--
            <classpath>
                <pathelement location="btree.jar"/>
                <pathelement location="castor-0.9.5.3.jar"/>
                <pathelement location="castor-0.9.5.3-xml.jar"/>
                <pathelement location="jdo.jar"/>
                <pathelement location="jdori-enhancer.jar"/>
                <pathelement location="jdori.jar"/>
                <pathelement location="jhall.jar"/>
            </classpath>
		-->
            <!-- To exclude some files: -->
            <!-- <exclude name="com/foo/SomeFile.java"/><exclude name="com/foo/somepackage/"/> -->
        </javac>
	<copy todir="${tmp.dir}">
	    <fileset dir="${src.dir}/com/ost/timekeeper/model">
		<include name="**/package.jdo"/>
		<exclude name="**/*.java"/>
	    </fileset>
	</copy>
	<path id="jdo.enhancer.classpath">
	    <!--
	    <pathelement location="btree.jar"/>
	    <pathelement location="jdori-enhancer.jar"/>
	    -->
	    <pathelement location="jdo.jar"/>
	    <pathelement location="jdori.jar"/>
	</path>
  	<java classname="com.sun.jdori.enhancer.EnhancerMain"
	    fork="true"
	    failonerror="true"
	    maxmemory="128m"
	    dir="${classes.dir}"
	    classpathref="jdo.enhancer.classpath"
	>
	    <arg line="-v -f "/>
	    <arg line="-j ${tmp.dir}:${classes.dir}"/>
	    <arg line="-s ${tmp.dir}:${classes.dir}"/>
	    <arg line="-d ${classes.dir}"/>
	    <!--
	    <arg path="${classes.dir}:${tmp.dir}"/>
	    -->
	    <arg value="com/ost/timekeeper/model/Period"/>
	</java>
  	<java classname="com.sun.jdori.enhancer.EnhancerMain"
	    fork="true"
	    failonerror="true"
	    maxmemory="128m"
	    dir="${classes.dir}"
	    classpathref="jdo.enhancer.classpath"
	>
	    <arg line="-v -f "/>
	    <arg line="-j ${tmp.dir}:${classes.dir}"/>
	    <arg line="-s ${tmp.dir}:${classes.dir}"/>
	    <arg line="-d ${classes.dir}"/>
	    <!--
	    <arg path="${classes.dir}:${tmp.dir}"/>
	    -->
	    <arg value="com/ost/timekeeper/model/Project"/>
	</java>
  	<java classname="com.sun.jdori.enhancer.EnhancerMain"
	    fork="true"
	    failonerror="true"
	    maxmemory="128m"
	    dir="${classes.dir}"
	    classpathref="jdo.enhancer.classpath"
	>
	    <arg line="-v -f "/>
	    <arg line="-j ${tmp.dir}:${classes.dir}"/>
	    <arg line="-s ${tmp.dir}:${classes.dir}"/>
	    <arg line="-d ${classes.dir}"/>
	    <!--
	    <arg path="${classes.dir}:${tmp.dir}"/>
	    -->
	    <arg value="com/ost/timekeeper/model/ProgressItem"/>
	</java>
	<javac debug="true" deprecation="true" destdir="${classes.dir}" srcdir="${src.dir}">
	    <!-- To add something to the classpath: -->
	    <!-- <classpath><pathelement location="${mylib}"/></classpath> -->
	    <classpath>
		<pathelement location="btree.jar"/>
		<pathelement location="castor-0.9.5.3.jar"/>
		<pathelement location="castor-0.9.5.3-xml.jar"/>
		<pathelement location="jdo.jar"/>
		<pathelement location="jdori-enhancer.jar"/>
		<pathelement location="jdori.jar"/>
		<pathelement location="jhall.jar"/>
	    </classpath>

	    <!-- To exclude some files: -->
	    <!-- <exclude name="com/foo/SomeFile.java"/><exclude name="com/foo/somepackage/"/> -->
	    <exclude name="com/ost/timekeeper/actions/ProjectDeleteAction.java"/>
	    <exclude name="com/ost/timekeeper/conf/SystemResources.java"/>
	    <exclude name="com/ost/timekeeper/conf/SystemResources.java"/>
	    
	</javac>
    </target>

    <target depends="init,compile" name="jar">
        <!-- To make a standalone app, insert into <jar>: -->
        <!-- <manifest><attribute name="Main-Class" value="com.foo.Main"/></manifest> -->
        <jar basedir="${classes.dir}" compress="true" jarfile="${jar}"/>
    </target>

    <target depends="init,jar" description="Build everything." name="all"/>

    <target depends="init" description="Javadoc for Timekeeper API." name="javadoc">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}" packagenames="*">
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
        </javadoc>
    </target>

    <target depends="init" description="Clean all build products." name="clean">
        <delete dir="${classes.dir}"/>
        <delete dir="${javadoc.dir}"/>
        <delete file="${jar}"/>
    </target>

</project>
