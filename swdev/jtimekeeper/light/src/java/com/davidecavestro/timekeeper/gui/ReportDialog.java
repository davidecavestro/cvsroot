/*
 * ReportDialog.java
 *
 * Created on January 10, 2007, 11:15 PM
 */

package com.davidecavestro.timekeeper.gui;

import com.davidecavestro.common.gui.dialog.DialogEvent;
import com.davidecavestro.common.gui.dialog.DialogListener;
import com.davidecavestro.common.gui.dialog.DialogNotifier;
import com.davidecavestro.common.gui.dialog.DialogNotifierImpl;
import com.davidecavestro.common.gui.persistence.PersistenceStorage;
import com.davidecavestro.common.gui.persistence.PersistenceUtils;
import com.davidecavestro.common.gui.persistence.PersistentComponent;
import com.davidecavestro.timekeeper.ApplicationContext;
import com.davidecavestro.timekeeper.model.Task;
import com.davidecavestro.timekeeper.report.DataExtractor;
import com.davidecavestro.timekeeper.report.JRBindings;
import com.davidecavestro.timekeeper.report.ReportDataGenerator;
import com.davidecavestro.timekeeper.report.ReportPreferences;
import com.davidecavestro.timekeeper.report.filter.TargetedFilterContainer;
import com.davidecavestro.timekeeper.report.flavors.CumulateLocalProgresses;
import java.awt.event.ActionEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;

/**
 * Dialog di preparazione del report.
 *
 * @author  Davide Cavestro
 */
public class ReportDialog extends javax.swing.JDialog implements PersistentComponent, DialogNotifier {
	
	private final DateFormat[] _dateFormats = new DateFormat[] {new SimpleDateFormat ("yy/MM/dd")};
	
	private final DialogNotifierImpl _dialogNotifier = new DialogNotifierImpl ();
	
	private final ApplicationContext _context;
	
	private final static TargetedFilterContainer[] targetedFilterArray = new TargetedFilterContainer [0];
	
	/** Costruttore. */
	public ReportDialog (java.awt.Frame parent, boolean modal, final ApplicationContext context) {
		super (parent, modal);
		_context = context;
		initComponents ();
		
		
		getRootPane ().setDefaultButton (okButton);
		
		cancelButton.getInputMap (JComponent.WHEN_IN_FOCUSED_WINDOW).put (KeyStroke.getKeyStroke ("ESCAPE"), "cancel");
		cancelButton.getActionMap().put("cancel", new javax.swing.AbstractAction ("cancel"){
			public void actionPerformed (ActionEvent ae){
				cancel ();
			}
		});
	
//		pack ();
		setLocationRelativeTo (null);
		
		timeRangeChanged ();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        presetsRadio = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        fromDateEditor = new org.jdesktop.swingx.JXDatePicker();
        toDateEditor = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        presetRangesList = new org.jdesktop.swingx.JXList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Time range"));
        buttonGroup1.add(presetsRadio);
        presetsRadio.setFont(new java.awt.Font("Dialog", 0, 12));
        presetsRadio.setText("last");
        presetsRadio.setToolTipText("Use presets");
        presetsRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        presetsRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        presetsRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetsRadioActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(presetsRadio, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Dialog", 0, 12));
        jRadioButton2.setText("custom");
        jRadioButton2.setToolTipText("Set a custom time range");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 4, 4, 4);
        jPanel1.add(jRadioButton2, gridBagConstraints);

        fromDateEditor.setFormats(_dateFormats);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 4, 4, 4);
        jPanel1.add(fromDateEditor, gridBagConstraints);

        toDateEditor.setFormats(_dateFormats);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(toDateEditor, gridBagConstraints);

        presetRangesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        presetRangesList.setFont(new java.awt.Font("Dialog", 0, 12));
        presetRangesList.setSelectedIndex(0);
        presetRangesList.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(presetRangesList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 4);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setText("from");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(19, 13, 3, 4);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel2.setText("to");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(7, 13, 3, 4);
        jPanel1.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        okButton.setFont(new java.awt.Font("Dialog", 0, 12));
        okButton.setText("Print");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(okButton, gridBagConstraints);

        cancelButton.setFont(new java.awt.Font("Dialog", 0, 12));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cancelButton, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 145, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 35, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jRadioButton2ActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
		timeRangeChanged ();
	}//GEN-LAST:event_jRadioButton2ActionPerformed

	private void presetsRadioActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presetsRadioActionPerformed
		timeRangeChanged ();
	}//GEN-LAST:event_presetsRadioActionPerformed

	private void cancelButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		cancel ();
	}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		confirm ();;
	}//GEN-LAST:event_okButtonActionPerformed
	


	public String getPersistenceKey () {
		return "report-dialog";
	}

	public void makePersistent (PersistenceStorage props) {
		PersistenceUtils.makeBoundsPersistent (props, getPersistenceKey (), this);
	}

	public boolean restorePersistent (PersistenceStorage props) {
		return PersistenceUtils.restorePersistentBounds (props, getPersistenceKey (), this);
	}

	public void addDialogListener (DialogListener l) {
		_dialogNotifier.addDialogListener (l);
	}

	public void removeDialogListener (DialogListener l) {
		_dialogNotifier.removeDialogListener (l);
	}
	
	/**
	 * Azione di CONFERMA sulla dialog
	 */
	private void confirm (){
		_dialogNotifier.fireDialogPerformed (new DialogEvent (this, new Date[] {/*@todo completare conle date di inizio e fine periodo*/}, JOptionPane.OK_OPTION));
		hide ();		
	}
	
	/**
	 * Azione di ANNULLA sulla dialog
	 */
	private void cancel (){
		hide ();
	}

	void showForRoot (Task reportRoot) {
		show ();
	}
	
	
	private void timeRangeChanged () {
		final boolean usePresets = presetsRadio.isSelected ();
		presetRangesList.setEnabled (usePresets);
		fromDateEditor.setEnabled (!usePresets);
		toDateEditor.setEnabled (!usePresets);
	}

	void launchReport () {
		final ReportPreferences prefs = new ReportPreferences (null);
		final JRBindings jrb = new JRBindings (getClass ().getResourceAsStream ("/cumulatelocalprogresses.jasper"), "/cumulatelocalprogresses/period/cumulatelocalprogresses/period", JRBindings.TASK_VIEW);

		final java.util.List filters = new ArrayList ();
//		if (this.fromFilterEnabled && this.fromFilter!=null){
//			filters.add (new TargetedFilterContainer (SimpleProgresses.PROGRESS_FROM, new NegateFilter (new BeforeDateFilter (this.fromFilter))));
//		}
//		if (this.toFilterEnabled && this.toFilter!=null){
//			filters.add (new TargetedFilterContainer (SimpleProgresses.PROGRESS_FROM, new NegateFilter (new AfterDateFilter (this.toFilter))));
//		}

		final DataExtractor extractor = new CumulateLocalProgresses (
			_context, 
			_context.getModel().getRoot (),
			(TargetedFilterContainer[])filters.toArray (targetedFilterArray),
			new Date (), 
			1, 
			7);


		new ReportDataGenerator (_context).generate (extractor, prefs, jrb);		
				
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private org.jdesktop.swingx.JXDatePicker fromDateEditor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private org.jdesktop.swingx.JXList presetRangesList;
    private javax.swing.JRadioButton presetsRadio;
    private org.jdesktop.swingx.JXDatePicker toDateEditor;
    // End of variables declaration//GEN-END:variables
	
}
